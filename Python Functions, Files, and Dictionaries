week 1


The textfile, travel_plans.txt, contains the summer travel plans for someone with some commentary. Find the total number of characters in the file and save to the variable num.

file = open('travel_plans.txt', 'r')
read = file.read()
num = 0
for i in read:
    num += 1
print(num)




We have provided a file called emotion_words.txt that contains lines of words that describe emotions. Find the total number of words in the file and assign this value to the variable num_words.

file = open('emotion_words.txt', 'r')
read = file.read()
words = read.split()

num_words = 0
for i in words:
    num_words += 1
print(num_words)




Assign to the variable num_lines the number of lines in the file school_prompt.txt.

file = open('school_prompt.txt','r')
lines = file.readlines()
num_lines = 0
for i in lines:
    num_lines += 1
print(num_lines)


Assign the first 30 characters of school_prompt.txt as a string to the variable beginning_chars.

file = open('school_prompt.txt','r')
v = file.read()
beginning_chars = v[:30]




Challenge: Using the file school_prompt.txt, assign the third word of every line to a list called three.

file = open('school_prompt.txt','r')
v = file.readlines()
three = []
n = 0
for i in v:
    n += 1
    three.insert(n, i.split()[2])
print(three)




Challenge: Create a list called emotions that contains the first word of every line in emotion_words.txt.
n = 0
emotions = []

with open('emotion_words.txt','r') as file: 
    for line in file:
        n += 1
        emotions.insert(n, line.split()[0])



Assign the first 33 characters from the textfile, travel_plans.txt to the variable first_chars.

with open('travel_plans.txt','r') as file:
    first_chars = file.read()[:33]




Challenge: Using the file school_prompt.txt, if the character ‘p’ is in a word, then add the word to a list called p_words.

file = open('school_prompt.txt','r')
words = file.read().strip().split()
print(words)

p_words = []
n = 0
for i in words:
    if ('p' in i):
        n += 1
        p_words.insert(n, i)


Week 2 
The dictionary Junior shows a schedule for a junior year semester. The key is the course name and the value is the number of credits. Find the total number of credits taken this semester and assign it to the variable credits. Do not hardcode this – use dictionary accumulation!
Junior = {'SI 206':4, 'SI 310':4, 'BL 300':3, 'TO 313':3, 'BCOM 350':1, 'MO 300':3}
credits=0
values = list(Junior.values())
for i in values:
    credits = credits + i
    
    
    
Create a dictionary, freq, that displays each character in string str1 as the key and its frequency as the value.

str1 = "peter piper picked a peck of pickled peppers"
freq = {}
for i in str1:
    if i not in freq:
        freq[i] = 0
    freq[i]+=1



Provided is a string saved to the variable name s1. Create a dictionary named counts that contains each letter in s1 and the number of times it occurs.
s1 = "hello"
counts ={}
for i in s1:
    if i not in counts:
        counts[i]=0
    counts[i]+=1



Create a dictionary, freq_words, that contains each word in string str1 as the key and its frequency as the value.
str1 = "I wish I wish with all my heart to fly with dragons in a land apart"
freq_words={}
keys = list(str1.split())
for key in keys:
    if key not in freq_words:
        freq_words[key]=0
    freq_words[key]+=1



Create a dictionary called wrd_d from the string sent, so that the key is a word and the value is how many times you have seen that word.
sent = "Singing in the rain and playing in the rain are two entirely different situations but both can be good"
wrd_d={}
keys = list(sent.split())
for key in keys:
    if key not in wrd_d:
        wrd_d[key]=0
    wrd_d[key]+=1



Create the dictionary characters that shows each character from the string sally and its frequency. Then, find the most frequent letter based on the dictionary. Assign this letter to the variable best_char.
sally = "sally sells sea shells by the sea shore"
characters ={}
for i in sally:
    if i not in characters:
        characters[i]=0
    characters[i]+=1
keys = list(characters.keys())
best_char = keys[0]
for key in keys:
    if characters[key] > characters[best_char]:
        best_char= key
    


Find the least frequent letter. Create the dictionary characters that shows each character from string sally and its frequency. Then, find the least frequent letter in the string and assign the letter to the variable worst_char.
sally = "sally sells sea shells by the sea shore and by the road"

characters ={}
for i in sally:
    if i not in characters :
        characters[i]=0
    characters[i]+=1

keys = list(characters.keys())
worst_char = keys[0]
for key in keys:
    if characters[key]<characters[worst_char]:
        worst_char=key
print(worst_char)


Create a dictionary named letter_counts that contains each letter and the number of times it occurs in string1. Challenge: Letters should not be counted separately as upper-case and lower-case. Intead, all of them should be counted as lower-case.
string1 = "There is a tide in the affairs of men, Which taken at the flood, leads on to fortune. Omitted, all the voyage of their life is bound in shallows and in miseries. On such a full sea are we now afloat. And we must take the current when it serves, or lose our ventures."
string2=string1.lower()
letter_counts={}
for i in string2:
    if i not in letter_counts:
        letter_counts[i]=0
    letter_counts[i]+=1


Create a dictionary called low_d that keeps track of all the characters in the string p and notes how many times each character was seen. Make sure that there are no repeats of characters as keys, such that “T” and “t” are both seen as a “t” for example.
p = "Summer is a great time to go outside. You have to be careful of the sun though because of the heat."
p2=p.lower()

low_d={}
for i in p2:
    if i not in low_d:
        low_d[i]=0
    low_d[i]+=1



Write a function called int_return that takes an integer as input and returns the same integer.
def int_return(x):
    return x
int_return(4)



Write a function called add that takes any number as its input and returns that sum with 2 added.
def add(x):
    sum = x +2
    return sum
add(4)


Write a function called change that takes any string, adds “Nice to meet you!” to the end of the argument given, and returns that new string.
def change(x):
    new = x + 'Nice to meet you!'
    return new
change('Ali')



Write a function, accum, that takes a list of integers as input and returns the sum of those integers.
def accum(list):
    sum = 0
    for i in list:
        sum+=i
    return sum
list=[1,2]



Write a function, length, that takes in a list as the input. If the length of the list is greater than or equal to 5, return “Longer than 5”. If the length is less than 5, return “Less than 5”.
def length(list):
    if len(list) >= 5:
        return 'Longer than 5'
    else:
        return 'Less than 5'
list=[2,3,5,6,7,8]
length(list)



You will need to write two functions for this problem. The first function, divide that takes in any number and returns that same number divided by 2. The second function called sum should take any number, divide it by 2, and add 6. It should return this new number. You should call the divide function within the sum function. Do not worry about decimals.
def divide(d):
    d = d/2
    return d
def sum(s):
    a = divide(s) +6
    return a
sum(8)






































